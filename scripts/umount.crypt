#!/bin/bash
#==============================================================================
# umount.crypt
#   Copyright © W. Michael Petullo <mike@flyn.org>, 2004
#   Copyright © Jan Engelhardt <jengelh [at] gmx de>, 2005 - 2006
#   Copyright © Bastian Kleineidam <calvin [at] debian org>, 2005
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License as
#   published by the Free Software Foundation; either version 2 of
#   the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public
#   License along with this program; if not, write to:
#   Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
#   Boston, MA  02110-1301  USA
#
#   -- For details, see the file named "LICENSE.GPL2"
#==============================================================================

# Sanitize environment
export PATH="/sbin:/bin:/usr/sbin:/usr/bin";
export IFS=`echo -en " \t\n"`;

READLINK="`which readlink`";
OPTIONS=""
USAGE="dir"

if [ -z "$1" ]; then
	echo "${0##*/}: directory to unmount not specified" >&2
	exit 1;
fi

if [ ! -d "$1" ]; then
        echo "${0##*/}: $1 is not a directory" >&2
	exit 1
fi

if [ -x "$READLINK" ]; then
	DEVICEDIR=` "$READLINK" -f "$1"`;
else
	DEVICEDIR="$1";
fi;
DEVICEDIR="${DEVICEDIR%/}";
DMDEVICE=`mount | grep " $DEVICEDIR " | awk '{ print $1 }' | sed 's/^\/dev\/mapper\///g'`;

if [ -z "$DMDEVICE" ]; then
	echo "Could not map $DEVICEDIR to a DM device";
	exit 1;
fi;

# ask cryptsetup about the underlying device
#
REALDEVICE=`cryptsetup status "$DMDEVICE" | sed -n '/device/s/[ ]*device:[ ]*//p'`;

for ((x = 5; x >= 0; --x)); do
	fuser -m "$1" || break;
	echo "Some program is blocking our unmount. Not nice.";
	sleep 1;
done;

umount "$1";
if [ $? -ne 0 ]; then
	echo "${0##*/}: error unmounting $1" >&2
	exit 1
fi

# Check for LUKS
#
if cryptsetup isLuks "$DEVICE" 2>/dev/null; then
	cryptsetup luksClose "$DMDEVICE";
else
	cryptsetup remove "$DMDEVICE";
fi;

if [ $? -ne 0 ]; then
	echo "${0##*/}: error removing $DMDEVICE" >&2
	exit 1
fi

if echo "$REALDEVICE" | grep ^/dev/loop >/dev/null; then
	losetup -d "$REALDEVICE";
	if [ $? -ne 0 ]; then
		echo "${0##*/}: error removing $REALDEVICE" >&2
		exit 1
	fi
fi
